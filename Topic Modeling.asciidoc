Imported all of the modules


+*In[80]:*+
[source, ipython3]
----
# Importing modules---------------------------------------------
import pandas as pd #To import dataset
import re #To modify the text, i.e to remove punctuations
from wordcloud import WordCloud #To create wordclouds
import gensim #For topic modeling and natural language processing
from gensim.utils import simple_preprocess #Converts document into unicode strings
import gensim.corpora as corpora #A corpus library to store text documents
from gensim.models import CoherenceModel #To calculate topic coherence for topic models
import nltk #To process natural language
from nltk.corpus import stopwords #To remove unnecessary words from the string
from pprint import pprint #To maintain the format of non fundamental Python types
import spacy #To preprocess the string for later analysis
import pickle #To convert python objects into byte streams
import pyLDAvis #Aids in interpreting the topics created in a topic model
import pyLDAvis.gensim_models #For topic modelling, document indexing and similarity retrieval
import numpy as np #For manipulating arrays
import tqdm as tqdm #To show the progress of iteration loops (The percentage that is completed)
import matplotlib.pyplot as plt #For data visualization


----


+*Out[80]:*+
----
/Users/jhaelle/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py:287: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.
  and should_run_async(code)
----

The .csv file is uploaded, then removed the columns that were not needed
for analysis. I only kept the bill number and bill text


+*In[7]:*+
[source, ipython3]
----

#Obtaining and filtering data-------------------------------------
docs = pd.read_csv('/Users/jhaelle/Desktop/PythonRB/bills.csv')
docs = docs.drop(columns=['Success', 'Sponsors', 'Type of Bill','Committees'], axis=1).sample(42)

----


+*Out[7]:*+
----
/Users/jhaelle/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py:287: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.
  and should_run_async(code)
----

From the ``Text'' column in ``docs'' all punctuations are removed and
all words are lowercased. Then the first 5 rows are printed to ensure I
obtained the desired preprocessed result.


+*In[8]:*+
[source, ipython3]
----

#Preprocessing---------------------------------------------------
# Punctuation
docs['Text_processed'] = \
docs['Text'].map(lambda x: re.sub('[,\.!?]', '', x))
# Lowercase
docs['Text_processed'] = \
docs['Text_processed'].map(lambda x: x.lower())
# Print
docs['Text_processed'].head()

----


+*Out[8]:*+
----
/Users/jhaelle/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py:287: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.
  and should_run_async(code)
<>:4: DeprecationWarning: invalid escape sequence \.
<>:4: DeprecationWarning: invalid escape sequence \.
<ipython-input-8-428a8c300192>:4: DeprecationWarning: invalid escape sequence \.
  docs['Text'].map(lambda x: re.sub('[,\.!?]', '', x))
9     as passed senate a bill to be entitled an act ...
41    a bill to be entitled an act 1 to amend chapte...
6     a bill to be entitled an act 1 to amend code s...
42    a bill to be entitled an act 1 to amend chapte...
29    a bill to be entitled an act 1 to amend chapte...
Name: Text_processed, dtype: object----

A word cloud is produced to visually reveal any other unnecessary words
that needs to be removed.


+*In[59]:*+
[source, ipython3]
----

#Verify Preprocessing---------------------------------------------
# Join all texts together
cloud = ','.join(list(docs['Text_processed'].values))
# WordCloud object
wordcloud = WordCloud(width=500, height= 500, background_color="white", max_words=5000, contour_width=2, contour_color='red')
# Produce
wordcloud.generate(cloud)
# Visualize
wordcloud.to_image()

----


+*Out[59]:*+
----
/Users/jhaelle/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py:287: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.
  and should_run_async(code)

![png](output_7_1.png)
----

Removes the stopwords identified in the word cloud as unnecessary to
create a string of words that will be most significant in developing
topics


+*In[65]:*+
[source, ipython3]
----

#Remove Stopwords---------------------------------------------
nltk.download('stopwords')
stop_words = stopwords.words('english')
stop_words.extend(['georgia', 'section', 'b','c','shall','may' 'related','matters','code','annotated','relating','article','member','law','amended','state','chapter','title','subsection'])
def sent_to_words(sentences):
    for sentence in sentences:
        yield(gensim.utils.simple_preprocess(str(sentence), deacc=True))
def remove_stopwords(texts):
    return [[word for word in simple_preprocess(str(doc)) 
             if word not in stop_words] for doc in texts]
data = docs.Text_processed.values.tolist()
data_words = list(sent_to_words(data))
data_words = remove_stopwords(data_words)
print(data_words[:1][0][:30])

----


+*Out[65]:*+
----
/Users/jhaelle/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py:287: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.
  and should_run_async(code)
[nltk_data] Downloading package stopwords to
[nltk_data]     /Users/jhaelle/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!

['passed', 'senate', 'bill', 'entitled', 'act', 'amend', 'official', 'general', 'provisions', 'regarding', 'parks', 'historic', 'areas', 'memorials', 'recreation', 'juvenile', 'programs', 'protection', 'children', 'youth', 'respectively', 'strengthen', 'laws', 'supports', 'foster', 'children', 'foster', 'families', 'provide', 'definitions']
----

A collection of the bill text was created, each word in the collection
was given an ID number, and the frequency of each term was calculated.
Then it printed out the the frequency of each ID number (ID number,
frequency).


+*In[66]:*+
[source, ipython3]
----

#Create Corpus----------------------------------------------------
#Dictionary
id2word = corpora.Dictionary(data_words)
# Corpus
texts = data_words
# Term Document Frequency
corpus = [id2word.doc2bow(text) for text in texts]
# View
print(corpus[:1][0][:30])

----


+*Out[66]:*+
----
[(0, 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 6), (8, 1), (9, 5), (10, 1), (11, 1), (12, 1), (13, 1), (14, 2), (15, 2), (16, 4), (17, 1), (18, 4), (19, 1), (20, 3), (21, 2), (22, 13), (23, 2), (24, 1), (25, 1), (26, 4), (27, 7), (28, 6), (29, 1), (30, 1)]

/Users/jhaelle/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py:287: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.
  and should_run_async(code)
----

To build the Latent Dirichlet allocation model the number of topics was
set to 10 for simplicity, other parameters are default. Then, it printed
the weight each keyword has within its topic.


+*In[68]:*+
[source, ipython3]
----

#Topic Modeling----------------------------------------------------
#LDA model
lda_model = gensim.models.LdaMulticore(corpus=corpus,
                                       id2word=id2word,
                                       num_topics=10)
# Prints weighted keywords
pprint(lda_model.print_topics())
doc_lda = lda_model[corpus]
----


+*Out[68]:*+
----
/Users/jhaelle/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py:287: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.
  and should_run_async(code)

[(0,
  '0.029*"court" + 0.018*"shall" + 0.017*"juvenile" + 0.015*"child" + '
  '0.010*"judge" + 0.008*"provide" + 0.007*"care" + 0.007*"violation" + '
  '0.006*"judges" + 0.006*"services"'),
 (1,
  '0.016*"shall" + 0.013*"sexual" + 0.013*"offense" + 0.012*"employee" + '
  '0.012*"violation" + 0.011*"agent" + 0.009*"person" + 0.009*"child" + '
  '0.007*"court" + 0.007*"children"'),
 (2,
  '0.028*"child" + 0.020*"shall" + 0.010*"court" + 0.009*"violation" + '
  '0.009*"services" + 0.008*"juvenile" + 0.008*"school" + 0.008*"care" + '
  '0.008*"provide" + 0.007*"offense"'),
 (3,
  '0.028*"shall" + 0.022*"child" + 0.016*"court" + 0.010*"care" + '
  '0.008*"juvenile" + 0.008*"provide" + 0.007*"judge" + 0.007*"health" + '
  '0.007*"services" + 0.006*"provided"'),
 (4,
  '0.023*"shall" + 0.010*"committee" + 0.009*"child" + 0.008*"court" + '
  '0.007*"provide" + 0.006*"juvenile" + 0.005*"department" + 0.005*"services" '
  '+ 0.005*"health" + 0.005*"school"'),
 (5,
  '0.020*"child" + 0.016*"shall" + 0.015*"violation" + 0.010*"offense" + '
  '0.010*"court" + 0.009*"services" + 0.009*"care" + 0.007*"sexual" + '
  '0.007*"children" + 0.006*"age"'),
 (6,
  '0.024*"child" + 0.023*"shall" + 0.010*"department" + 0.009*"court" + '
  '0.009*"services" + 0.008*"school" + 0.007*"care" + 0.007*"children" + '
  '0.006*"provide" + 0.006*"juvenile"'),
 (7,
  '0.020*"shall" + 0.015*"court" + 0.012*"juvenile" + 0.012*"child" + '
  '0.009*"violation" + 0.008*"provide" + 0.007*"care" + 0.007*"judge" + '
  '0.007*"services" + 0.007*"provided"'),
 (8,
  '0.016*"shall" + 0.014*"child" + 0.012*"school" + 0.009*"provide" + '
  '0.009*"court" + 0.007*"care" + 0.007*"department" + 0.007*"health" + '
  '0.007*"services" + 0.006*"public"'),
 (9,
  '0.019*"shall" + 0.012*"child" + 0.010*"juvenile" + 0.010*"court" + '
  '0.008*"school" + 0.008*"care" + 0.007*"department" + 0.007*"services" + '
  '0.006*"violation" + 0.006*"health"')]
----

Similar to the process above, except this groups 2 and 3 word phrases
together to be used for the Latent Dirichlet allocation model. To
prepare these phrases for analysis, the stopwords are removed and some
keywords are converted to their base form. The final keywords are
printed in a string.


+*In[13]:*+
[source, ipython3]
----
#Phrase Modeling for Bigrams and Trigrams----------------------------------------------------------
# Build the models
bigram = gensim.models.Phrases(data_words, min_count=5, threshold=100) 
trigram = gensim.models.Phrases(bigram[data_words], threshold=100)
bigram_mod = gensim.models.phrases.Phraser(bigram)
trigram_mod = gensim.models.phrases.Phraser(trigram)

stop_words = stopwords.words('english')
stop_words.extend(['georgia', 'section', 'b','c' 'related','matters','code','annotated','relating','article','member','law','amended','state','chapter','title','subsection'])
# Define functions for stopwords, bigrams, trigrams and lemmatization
def make_bigrams(texts):
    return [bigram_mod[doc] for doc in texts]
def make_trigrams(texts):
    return [trigram_mod[bigram_mod[doc]] for doc in texts]
def lemmatization(texts, allowed_postags=['NOUN', 'ADJ', 'VERB', 'ADV']):
    """https://spacy.io/api/annotation"""
    texts_out = []
    for sent in texts:
        doc = nlp(" ".join(sent)) 
        texts_out.append([token.lemma_ for token in doc if token.pos_ in allowed_postags])
    return texts_out

# Remove stopwords
data_words_nostops = remove_stopwords(data_words)
# Form Bigrams
data_words_bigrams = make_bigrams(data_words_nostops)
# Initialize spacy model
nlp = spacy.load("en_core_web_sm", disable=['parser', 'ner'])
# Do lemmatization keeping only noun, adjective, verb and adverb
data_lemmatized = lemmatization(data_words_bigrams, allowed_postags=['NOUN', 'ADJ', 'VERB', 'ADV'])
print(data_lemmatized[:1])
----


+*Out[13]:*+
----
/Users/jhaelle/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py:287: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.
  and should_run_async(code)

[['pass', 'bill_entitled', 'act', 'amend_official', 'general', 'provision', 'regard', 'park', 'historic', 'area', 'memorial', 'recreation', 'juvenile', 'program', 'protection', 'child', 'youth', 'respectively', 'strengthen', 'law', 'support', 'foster', 'child', 'foster', 'family', 'provide', 'definition', 'provide', 'free', 'access', 'park', 'foster', 'parent', 'provide', 'report', 'certain', 'datum', 'juvenile', 'court', 'clerk', 'foster', 'child', 'allege', 'adjudicated', 'child', 'need', 'service', 'delinquent', 'child', 'provide', 'attorney', 'conflict', 'resolution', 'certain', 'juvenile', 'court', 'hearing', 'authorize', 'department', 'human', 'service', 'partner', 'child', 'place', 'agency', 'assist', 'casework', 'service', 'provide', 'varying', 'level', 'training', 'require', 'experienced', 'foster', 'parent', 'respite', 'caregiver', 'provide', 'conflicting_law', 'purposes_enacte', 'general_assembly', 'official', 'general', 'provision', 'regard', 'park', 'historic', 'area', 'memorial', 'recreation', 'use', 'term', 'fictive_kin', 'meaning_set', 'forth', 'foster', 'parent', 'meaning_set', 'fee', 'admission', 'park', 'historic', 'site', 'recreational', 'area', 'operate', 'pursuant', 'authority', 'department', 'waive', 'foster', 'parent', 'relative', 'fictive_kin', 'serve', 'primary', 'placement', 'child', 'temporary', 'permanent', 'custody', 'division', 'family', 'child', 'service', 'department', 'human', 'service', 'sb_csfa', 'official', 'juvenile', 'revise', 'collection', 'information', 'juvenile', 'court', 'clerk', 'report', 'requirement', 'datum', 'collection', 'follow', 'clerk', 'juvenile', 'court', 'collect', 'follow', 'information', 'child', 'need', 'service', 'delinquent', 'child', 'child', 'accuse', 'class', 'designate', 'felony', 'act', 'class', 'designate', 'felony', 'act', 'provide', 'information', 'djj', 'frequently', 'request', 'djj', 'name', 'date', 'birth', 'sex', 'race', 'offense', 'charge', 'location', 'offense', 'include', 'name', 'school', 'offense', 'occur', 'school', 'safety', 'zone', 'define', 'name', 'referral', 'source', 'include', 'name', 'school', 'refer', 'source', 'school', 'disposition', 'case', 'date', 'authority', 'commitment', 'applicable', 'clerk', 'juvenile', 'court', 'report', 'administrative', 'office', 'court', 'total', 'number', 'petition', 'motion', 'file', 'previous', 'calendar', 'year', 'number', 'number', 'court', 'appoint', 'litem', 'number', 'court', 'appoint', 'counsel', 'number', 'judge', 'issue', 'order', 'authorize', 'abortion', 'notification', 'number', 'judge', 'deny', 'order', 'last', 'number', 'denial', 'appeal', 'file', 'number', 'appeal', 'result', 'denial', 'affirm', 'number', 'appeal', 'result', 'reversal', 'denial', 'clerk', 'make', 'report', 'march', 'year', 'previous', 'calendar', 'year', 'individual', 'report', 'make', 'administrative', 'office', 'court', 'hold', 'confidential', 'disclosure', 'open', 'record', 'administrative', 'office', 'court', 'provide', 'aggregate', 'statistic', 'accordance', 'individual', 'report', 'destroy', 'month', 'submission', 'administrative', 'office', 'court', 'pursuant', 'rule', 'promulgate', 'adopt', 'judicial', 'council', 'court', 'january', 'clerk', 'juvenile', 'court', 'collect', 'datum', 'sb_csfa', 'child', 'allege', 'adjudicate', 'delinquent', 'child', 'transmit', 'datum', 'require', 'rule', 'judicial', 'council', 'supreme', 'court', 'make', 'publish', 'print', 'electronically', 'wide', 'minimum', 'standard', 'rule', 'deem', 'necessary', 'carry', 'clerk', 'juvenile', 'court', 'develop', 'enact', 'policy', 'procedure', 'necessary', 'carry', 'standard', 'rule', 'create', 'judicial', 'council', 'court', 'pursuant', 'rule', 'adopt', 'supreme', 'court', 'january', 'clerk', 'juvenile', 'court', 'collect', 'datum', 'case', 'child', 'allege', 'adjudicated', 'child', 'need', 'service', 'delinquent', 'child', 'place', 'foster', 'care', 'also', 'allege', 'child', 'transmit', 'datum', 'require', 'rule', 'datum', 'include', 'minimum', 'adherence', 'case', 'court', 'time', 'frame', 'contain', 'say', 'revise', 'continuance', 'hearing', 'dependency', 'proceeding', 'follow', 'stipulation', 'attorney', 'convenience', 'party', 'constitute_good', 'cause', 'otherwise', 'provide', 'judicial', 'rule', 'govern', 'attorney', 'conflict', 'resolution', 'pende', 'criminal', 'prosecution', 'family', 'matter', 'cause', 'hearing', 'dependency', 'case', 'time', 'limitation', 'require', 'termination_parental', 'right', 'hearing', 'take', 'priority', 'attorney', 'conflict', 'resolution', 'civil', 'criminal', 'hearing', 'nonjury', 'appearance', 'class', 'trial', 'court', 'need', 'discovery', 'cause', 'court', 'find', 'person', 'entity', 'fail', 'comply', 'order', 'discovery', 'official', 'program', 'protection', 'child', 'youth', 'power', 'duty', 'department', 'human', 'service', 'revise', 'follow', 'department', 'human', 'service', 'authorize', 'empowered', 'program', 'program', 'county', 'district', 'department', 'family', 'child', 'service', 'establish', 'maintain', 'extend', 'improve', 'limit', 'funds_appropriate', 'therefor', 'program', 'provide', 'preventive', 'service', 'follow', 'collect', 'disseminate', 'information', 'problem', 'child', 'youth', 'provide', 'consultative', 'assistance', 'group', 'public', 'private', 'interested', 'sb_csfa', 'develop', 'program', 'service', 'prevention', 'control', 'treatment', 'dependency', 'delinquency', 'child', 'research', 'demonstration', 'project', 'design', 'add', 'store', 'information', 'social', 'emotional', 'problem', 'child', 'youth', 'improve', 'method', 'deal', 'problem', 'child', 'welfare', 'service', 'follow', 'casework', 'service', 'child', 'youth', 'mothers_beare', 'child', 'wedlock', 'live', 'home', 'elsewhere', 'help', 'overcome', 'problem', 'result', 'dependency', 'delinquency', 'department', 'authorize', 'contract', 'certify', 'partner', 'license', 'child', 'place', 'agency', 'assist', 'provide', 'casework', 'service', 'protective', 'service', 'investigate', 'complaint', 'abuse', 'abandonment', 'child', 'youth', 'parent', 'guardian', 'custodian', 'person', 'serve', 'loco', 'parentis', 'basis', 'finding', 'investigation', 'offer', 'social', 'service', 'parent', 'guardian', 'custodian', 'person', 'serve', 'loco', 'parentis', 'relation', 'problem', 'bring', 'situation', 'attention', 'enforcement', 'agency', 'appropriate', 'court', 'community', 'agency', 'supervise', 'provide', 'require', 'service', 'care', 'involve', 'interstate', 'placement', 'child', 'homemaker', 'service', 'payment', 'cost', 'service', 'need', 'due', 'absence', 'incapacity', 'mother', 'boarding', 'care', 'payment_maintenance', 'cost', 'foster', 'family', 'home', 'group', 'care', 'facility', 'child', 'youth', 'adequately', 'care', 'home', 'boarding', 'care', 'payment_maintenance', 'cost', 'mothers_beare', 'child', 'wedlock', 'prior', 'reasonable', 'period', 'childbirth', 'day', 'care', 'service', 'care', 'protection', 'child', 'parent', 'absent', 'home', 'unable', 'reason', 'provide', 'parental', 'supervision', 'casework', 'service', 'care', 'child', 'youth', 'parent', 'custodian', 'guardian', 'place', 'child', 'custody', 'department', 'voluntary', 'agreement', 'agreement', 'revoke', 'parent', 'custodian', 'guardian', 'request', 'child', 'return', 'parent', 'custodian', 'guardian', 'relative', 'voluntary', 'agreement', 'expire', 'provide', 'however', 'subparagraph', 'prohibit', 'department', 'obtaining', 'order', 'place', 'child', 'custody', 'accordance', 'department', 'authorize', 'contract', 'certify', 'partner', 'license', 'child', 'place', 'agency', 'assist', 'provide', 'casework', 'service', 'sb_csfa', 'service', 'court', 'request', 'follow', 'accept', 'casework', 'service', 'care', 'child', 'youth', 'legal', 'custody', 'vest', 'department', 'court', 'provide', 'shelter', 'custodial', 'care', 'child', 'prior', 'examination', 'study', 'pende', 'court', 'hearing', 'make', 'social', 'study', 'report', 'court', 'respect', 'child', 'youth', 'petition', 'file', 'provide', 'casework', 'service', 'care', 'payment_maintenance', 'cost', 'child', 'youth', 'run', 'away', 'home', 'community', 'home', 'community', 'home', 'community', 'pay', 'cost', 'return', 'runaway', 'child', 'youth', 'home', 'community', 'provide', 'service', 'care', 'cost', 'runaway', 'child', 'youth', 'require', 'regional', 'group', 'care', 'facility', 'purpose', 'provide', 'local', 'authority', 'alternative', 'place', 'child', 'common', 'jail', 'shelter', 'care', 'prior', 'examination', 'study', 'pende', 'hear', 'juvenile', 'court', 'detention', 'prior', 'examination', 'study', 'pende', 'hear', 'juvenile', 'court', 'study', 'diagnosis', 'pende', 'determination', 'treatment', 'hear', 'juvenile', 'court', 'facility', 'design', 'afford', 'specialize', 'diversified', 'program', 'forestry', 'camp', 'ranch', 'group', 'residence', 'care', 'treatment', 'training', 'child', 'youth', 'different', 'age', 'different', 'emotional', 'mental', 'physical', 'condition', 'regulation', 'child', 'place', 'agency', 'child', 'care', 'institution', 'maternity', 'home', 'establish', 'rules_regulation', 'provide', 'consultation', 'rules_regulation', 'agency', 'institution', 'home', 'license', 'inspect', 'periodically', 'agency', 'institution', 'home', 'ensure', 'adherence', 'establish', 'standard', 'prescribe', 'department', 'adoption', 'service', 'follow', 'supervise', 'work', 'child', 'place', 'agency', 'fund', 'make', 'available', 'provide', 'service', 'parent', 'desire', 'surrender', 'child', 'adoption', 'provide', 'adoption', 'statute', 'provide', 'care', 'payment_maintenance', 'cost', 'mothers_beare', 'child', 'wedlock', 'child', 'consider', 'adoption', 'sb_csfa', 'inquire', 'character', 'reputation', 'person', 'make', 'application', 'adoption', 'child', 'place', 'child', 'adoption', 'provide', 'financial', 'assistance', 'family', 'adopt', 'child', 'child', 'place', 'adoption', 'determine', 'eligible', 'assistance', 'adoption', 'assistance', 'agreement', 'sign', 'prior', 'finalization', 'adoption', 'party', 'financial', 'assistance', 'grant', 'hard', 'place', 'child', 'physical', 'mental', 'emotional', 'disability', 'problem', 'difficult', 'find', 'permanent', 'home', 'financial', 'assistance', 'exceed', 'percent', 'amount', 'pay', 'boarding', 'child', 'family', 'foster', 'home', 'special', 'service', 'medical', 'care', 'available', 'insurance', 'public', 'facility', 'supplement', 'available', 'family', 'provide', 'child', 'adequately', 'continued', 'financial', 'assistance', 'department', 'review', 'supplement', 'pay', 'time', 'review', 'least', 'annually', 'determine', 'continued', 'assistance', 'provide', 'payment', 'license', 'child', 'place', 'agency', 'place', 'child', 'special', 'need', 'jurisdiction', 'department', 'adoption', 'payment', 'exceed', 'adoption', 'arrange', 'agency', 'board', 'define', 'special', 'need', 'child', 'half', 'payment', 'make', 'time', 'placement', 'remain', 'amount', 'pay', 'adoption', 'finalize', 'adoption', 'disrupt', 'prior', 'finalization', 'reimburse', 'child', 'place', 'agency', 'amount', 'calculate', 'prorated', 'basis', 'base', 'length', 'time', 'child', 'home', 'service', 'provide', 'provide', 'payment', 'agency', 'recruit', 'educate', 'train', 'potential', 'adoptive', 'foster', 'parent', 'preparation', 'anticipation', 'adopt', 'foster', 'special', 'need', 'child', 'board', 'define', 'special', 'need', 'child', 'set', 'payment', 'amount', 'rule', 'regulation', 'appropriate', 'documentation', 'preplacement', 'service', 'timely', 'manner', 'payment', 'set', 'board', 'make', 'enrollment', 'potential', 'adoptive', 'foster', 'parent', 'service', 'staff', 'development', 'recruitment', 'program', 'service', 'train', 'educational', 'scholarship', 'personnel', 'necessary', 'assure', 'efficient', 'effective', 'administration', 'service', 'care', 'child', 'youth', 'authorize', 'department', 'authorize', 'disburse', 'fund', 'match', 'federal', 'fund', 'order', 'provide', 'qualified', 'employee', 'graduate', 'postgraduate', 'educational', 'scholarship', 'accordance', 'rules_regulation', 'adopt', 'board', 'pursuant', 'viii', 'vii', 'paragraph', 'constitution', 'sb_csfa', 'miscellaneous', 'service', 'provide', 'medical', 'hospital', 'psychiatric', 'surgical', 'dental', 'service', 'payment', 'cost', 'service', 'consider', 'appropriate', 'necessary', 'competent', 'medical', 'authority', 'child', 'supervision', 'control', 'department', 'secure', 'prior', 'consent', 'parent', 'legal', 'guardian', 'preparation', 'education', 'training', 'foster', 'parent', 'provide', 'appropriate', 'knowledge', 'skill', 'provide', 'need', 'foster', 'child', 'include', 'knowledge', 'skill', 'reasonable', 'prudent', 'parent', 'standard', 'participation', 'child', 'age', 'developmentally', 'appropriate', 'activity', 'continue', 'preparation', 'necessary', 'placement', 'child', 'department', 'authorize', 'require', 'vary', 'level', 'initial', 'annual', 'training', 'base', 'experience', 'foster', 'parent', 'age', 'need', 'foster', 'child', 'child', 'foster', 'parent', 'provide', 'respite', 'care', 'part', 'training', 'offer', 'online', 'youth', 'leave', 'foster', 'care', 'reason', 'attain', 'child', 'foster', 'care', 'less', 'month', 'child', 'eligible', 'receive', 'document', 'official', 'birth', 'certificate', 'child', 'social', 'security', 'card', 'issue', 'commissioner', 'social', 'security', 'health', 'insurance', 'information', 'copy', 'child', 'medical', 'record', 'driver', 'license', 'identification', 'card', 'issue', 'accordance', 'requirement', 'real', 'd', 'act', 'official', 'documentation', 'necessary', 'prove', 'child', 'previously', 'foster', 'care', 'provision', 'record', 'accordance', 'paragraph', 'consider', 'violation', 'extend', 'care', 'youth', 'service', 'youth', 'receive', 'federal', 'reimbursement', 'provide', 'service', 'accordance', 'usc', 'exist', 'law', 'conflict', 'act_repeale']]
----

A collection of the phrases and keywords was created, each
phrase/keyword in the collection was given an ID number, and the
frequency of each was calculated. Then it printed out the the frequency
of each ID number (ID number, frequency).


+*In[14]:*+
[source, ipython3]
----
#Create Corpus----------------------------------------------------
# Create Dictionary
id2word = corpora.Dictionary(data_lemmatized)
# Create Corpus
texts = data_lemmatized
# Term Document Frequency
corpus = [id2word.doc2bow(text) for text in texts]
# View
print(corpus[:2])
----


+*Out[14]:*+
----
[[(0, 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 6), (8, 1), (9, 4), (10, 1), (11, 1), (12, 1), (13, 2), (14, 2), (15, 1), (16, 2), (17, 1), (18, 4), (19, 1), (20, 5), (21, 13), (22, 2), (23, 1), (24, 1), (25, 3), (26, 13), (27, 1), (28, 4), (29, 4), (30, 1), (31, 1), (32, 1), (33, 4), (34, 1), (35, 1), (36, 1), (37, 3), (38, 1), (39, 1), (40, 1), (41, 2), (42, 5), (43, 3), (44, 1), (45, 3), (46, 8), (47, 1), (48, 1), (49, 1), (50, 4), (51, 4), (52, 8), (53, 3), (54, 1), (55, 2), (56, 2), (57, 1), (58, 2), (59, 4), (60, 3), (61, 1), (62, 1), (63, 2), (64, 1), (65, 2), (66, 25), (67, 1), (68, 2), (69, 4), (70, 7), (71, 3), (72, 2), (73, 1), (74, 2), (75, 1), (76, 1), (77, 76), (78, 1), (79, 1), (80, 3), (81, 8), (82, 4), (83, 2), (84, 1), (85, 1), (86, 1), (87, 5), (88, 1), (89, 1), (90, 1), (91, 1), (92, 1), (93, 4), (94, 1), (95, 1), (96, 3), (97, 1), (98, 1), (99, 1), (100, 1), (101, 1), (102, 1), (103, 1), (104, 2), (105, 2), (106, 2), (107, 1), (108, 1), (109, 8), (110, 3), (111, 1), (112, 1), (113, 29), (114, 1), (115, 2), (116, 1), (117, 5), (118, 4), (119, 1), (120, 2), (121, 7), (122, 1), (123, 1), (124, 1), (125, 3), (126, 1), (127, 2), (128, 4), (129, 1), (130, 3), (131, 1), (132, 1), (133, 17), (134, 4), (135, 2), (136, 2), (137, 1), (138, 1), (139, 1), (140, 1), (141, 2), (142, 2), (143, 1), (144, 1), (145, 1), (146, 2), (147, 1), (148, 1), (149, 1), (150, 1), (151, 2), (152, 1), (153, 1), (154, 1), (155, 1), (156, 1), (157, 1), (158, 2), (159, 1), (160, 2), (161, 1), (162, 1), (163, 1), (164, 1), (165, 1), (166, 2), (167, 1), (168, 1), (169, 1), (170, 2), (171, 1), (172, 3), (173, 1), (174, 1), (175, 1), (176, 1), (177, 1), (178, 1), (179, 1), (180, 3), (181, 3), (182, 2), (183, 1), (184, 1), (185, 1), (186, 1), (187, 2), (188, 4), (189, 1), (190, 8), (191, 2), (192, 1), (193, 2), (194, 2), (195, 3), (196, 2), (197, 1), (198, 4), (199, 2), (200, 1), (201, 8), (202, 1), (203, 1), (204, 21), (205, 1), (206, 1), (207, 1), (208, 3), (209, 1), (210, 2), (211, 1), (212, 1), (213, 1), (214, 1), (215, 4), (216, 6), (217, 1), (218, 1), (219, 1), (220, 3), (221, 6), (222, 1), (223, 3), (224, 1), (225, 14), (226, 1), (227, 1), (228, 1), (229, 4), (230, 1), (231, 2), (232, 1), (233, 4), (234, 2), (235, 6), (236, 1), (237, 1), (238, 1), (239, 3), (240, 2), (241, 1), (242, 1), (243, 1), (244, 1), (245, 1), (246, 3), (247, 1), (248, 2), (249, 2), (250, 4), (251, 1), (252, 13), (253, 2), (254, 1), (255, 2), (256, 1), (257, 1), (258, 2), (259, 1), (260, 1), (261, 2), (262, 5), (263, 1), (264, 1), (265, 1), (266, 1), (267, 1), (268, 1), (269, 2), (270, 1), (271, 8), (272, 1), (273, 1), (274, 1), (275, 1), (276, 1), (277, 2), (278, 4), (279, 2), (280, 2), (281, 1), (282, 2), (283, 1), (284, 2), (285, 1), (286, 3), (287, 1), (288, 4), (289, 6), (290, 11), (291, 1), (292, 1), (293, 9), (294, 1), (295, 1), (296, 3), (297, 2), (298, 4), (299, 5), (300, 1), (301, 1), (302, 1), (303, 5), (304, 1), (305, 1), (306, 2), (307, 18), (308, 1), (309, 2), (310, 4), (311, 1), (312, 1), (313, 3), (314, 2), (315, 1), (316, 4), (317, 8), (318, 4), (319, 5), (320, 1), (321, 1), (322, 1), (323, 2), (324, 4), (325, 1), (326, 2), (327, 2), (328, 15), (329, 4), (330, 1), (331, 1), (332, 2), (333, 1), (334, 3), (335, 1), (336, 1), (337, 1), (338, 1), (339, 2), (340, 1), (341, 1), (342, 1), (343, 7), (344, 1), (345, 1), (346, 6), (347, 1), (348, 1), (349, 8), (350, 1), (351, 1), (352, 1), (353, 1), (354, 1), (355, 3), (356, 1), (357, 1), (358, 35), (359, 3), (360, 1), (361, 1), (362, 2), (363, 1), (364, 1), (365, 1), (366, 4), (367, 1), (368, 1), (369, 1), (370, 1), (371, 2), (372, 2), (373, 2), (374, 3), (375, 2), (376, 1), (377, 1), (378, 1), (379, 1), (380, 1), (381, 2), (382, 1), (383, 2), (384, 1), (385, 1), (386, 1), (387, 2), (388, 1), (389, 7), (390, 1), (391, 3), (392, 7), (393, 2), (394, 1), (395, 1), (396, 3), (397, 1), (398, 1), (399, 2), (400, 3), (401, 2), (402, 1), (403, 2), (404, 3), (405, 1), (406, 1), (407, 8), (408, 3), (409, 1), (410, 2), (411, 1), (412, 1), (413, 6), (414, 2), (415, 4), (416, 1), (417, 2), (418, 3), (419, 40), (420, 2), (421, 1), (422, 2), (423, 1), (424, 1), (425, 1), (426, 2), (427, 5), (428, 2), (429, 5), (430, 1), (431, 1), (432, 4), (433, 1), (434, 1), (435, 1), (436, 1), (437, 1), (438, 5), (439, 1), (440, 1), (441, 2), (442, 2), (443, 2), (444, 1), (445, 2), (446, 1), (447, 1), (448, 1), (449, 1), (450, 1), (451, 1), (452, 1), (453, 5), (454, 1), (455, 1), (456, 2), (457, 5), (458, 2), (459, 3), (460, 1), (461, 1), (462, 1), (463, 1), (464, 1), (465, 1), (466, 1), (467, 1), (468, 1), (469, 1), (470, 2), (471, 1), (472, 3), (473, 1), (474, 1), (475, 1), (476, 3), (477, 18), (478, 1)], [(9, 3), (10, 1), (19, 1), (25, 12), (26, 1), (30, 2), (32, 3), (37, 1), (40, 4), (41, 4), (46, 4), (50, 6), (51, 1), (53, 3), (55, 2), (58, 6), (65, 3), (69, 1), (72, 3), (73, 9), (74, 1), (76, 3), (77, 15), (79, 1), (91, 2), (92, 1), (93, 3), (94, 1), (95, 3), (101, 2), (105, 5), (106, 1), (108, 2), (112, 2), (113, 20), (115, 1), (117, 6), (118, 1), (120, 6), (122, 1), (125, 3), (126, 1), (130, 1), (133, 5), (136, 1), (137, 4), (141, 1), (142, 1), (161, 1), (165, 1), (176, 1), (180, 3), (187, 2), (190, 10), (191, 1), (192, 3), (195, 8), (198, 4), (199, 3), (200, 1), (201, 8), (210, 1), (211, 1), (214, 2), (216, 1), (219, 6), (221, 2), (227, 1), (229, 3), (230, 1), (233, 17), (234, 2), (235, 8), (243, 1), (245, 4), (246, 10), (249, 7), (252, 1), (253, 2), (254, 1), (255, 2), (256, 6), (258, 4), (259, 1), (262, 13), (264, 3), (265, 2), (266, 1), (271, 2), (278, 1), (280, 1), (282, 1), (284, 2), (288, 6), (289, 3), (295, 2), (296, 1), (299, 2), (303, 14), (304, 1), (306, 5), (307, 7), (308, 3), (311, 3), (313, 1), (314, 14), (315, 1), (321, 1), (324, 16), (326, 20), (332, 1), (339, 2), (340, 1), (342, 1), (343, 3), (346, 1), (348, 2), (349, 4), (350, 1), (352, 1), (356, 3), (357, 1), (358, 29), (359, 2), (362, 7), (365, 1), (366, 12), (371, 1), (373, 1), (374, 2), (381, 2), (386, 1), (387, 1), (389, 1), (392, 9), (393, 4), (395, 1), (404, 9), (406, 4), (408, 2), (412, 7), (415, 6), (417, 1), (418, 2), (419, 3), (422, 1), (423, 2), (426, 2), (427, 8), (429, 1), (444, 5), (449, 1), (453, 2), (456, 2), (471, 1), (476, 2), (479, 4), (480, 1), (481, 1), (482, 3), (483, 3), (484, 5), (485, 1), (486, 1), (487, 4), (488, 2), (489, 3), (490, 1), (491, 1), (492, 1), (493, 1), (494, 1), (495, 1), (496, 10), (497, 4), (498, 2), (499, 1), (500, 2), (501, 3), (502, 1), (503, 1), (504, 1), (505, 1), (506, 2), (507, 1), (508, 1), (509, 1), (510, 2), (511, 6), (512, 1), (513, 1), (514, 1), (515, 1), (516, 2), (517, 1), (518, 8), (519, 1), (520, 1), (521, 1), (522, 1), (523, 1), (524, 2), (525, 1), (526, 5), (527, 6), (528, 1), (529, 1), (530, 1), (531, 1), (532, 1), (533, 5), (534, 1), (535, 2), (536, 2), (537, 3), (538, 1), (539, 1), (540, 4), (541, 1), (542, 1), (543, 2), (544, 1), (545, 5), (546, 1), (547, 1), (548, 1), (549, 1), (550, 2), (551, 1), (552, 1), (553, 2), (554, 4), (555, 4), (556, 1), (557, 3), (558, 1), (559, 4), (560, 1), (561, 27), (562, 1), (563, 1), (564, 5), (565, 1), (566, 1), (567, 1), (568, 3), (569, 7), (570, 1), (571, 4), (572, 3), (573, 2), (574, 2), (575, 4), (576, 2), (577, 1), (578, 1), (579, 1), (580, 2), (581, 1), (582, 1), (583, 2), (584, 1), (585, 1), (586, 1), (587, 1), (588, 1), (589, 1), (590, 1), (591, 7), (592, 1), (593, 1), (594, 3), (595, 2), (596, 2), (597, 1), (598, 3), (599, 1), (600, 4), (601, 1), (602, 1), (603, 1), (604, 1), (605, 1), (606, 1), (607, 2), (608, 1), (609, 1), (610, 1), (611, 1), (612, 4), (613, 2), (614, 2), (615, 31), (616, 13), (617, 5), (618, 3), (619, 1), (620, 1), (621, 1), (622, 1), (623, 1), (624, 1), (625, 2), (626, 2), (627, 1), (628, 2), (629, 1), (630, 3), (631, 2), (632, 1), (633, 1), (634, 4), (635, 2), (636, 2), (637, 1), (638, 1), (639, 3), (640, 1), (641, 1), (642, 3), (643, 31), (644, 4), (645, 1), (646, 1), (647, 1), (648, 1), (649, 1), (650, 1), (651, 24), (652, 2), (653, 1), (654, 2), (655, 1), (656, 1), (657, 1), (658, 2), (659, 5), (660, 8), (661, 1), (662, 2), (663, 4), (664, 2), (665, 4), (666, 1), (667, 2), (668, 1), (669, 1), (670, 1), (671, 2), (672, 1), (673, 1), (674, 1), (675, 1), (676, 1), (677, 5), (678, 1), (679, 1), (680, 4), (681, 1), (682, 1), (683, 1), (684, 2), (685, 1), (686, 1), (687, 2), (688, 1), (689, 1), (690, 3), (691, 1), (692, 1), (693, 1), (694, 1), (695, 4), (696, 1), (697, 1), (698, 2), (699, 1), (700, 3), (701, 1), (702, 1), (703, 2), (704, 4), (705, 1), (706, 1), (707, 1), (708, 8), (709, 1), (710, 1), (711, 1), (712, 1), (713, 2), (714, 1), (715, 4), (716, 4), (717, 1), (718, 1), (719, 2), (720, 1), (721, 1), (722, 3), (723, 1), (724, 1), (725, 2), (726, 1), (727, 1), (728, 5), (729, 12), (730, 1), (731, 1), (732, 1), (733, 2), (734, 1), (735, 1), (736, 1), (737, 1), (738, 5), (739, 3)]]

/Users/jhaelle/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py:287: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.
  and should_run_async(code)
----

To build the Latent Dirichlet allocation model for phrases the general
parameters and the number of topics were maintained. The chunksize
determines how many documents are processed at one time, 100 was chosen
for efficancy and speed. The passes determines how often the model is
trained on the documents, 10 was chosen to maintain efficancy while
using the highest amount possible. The model also computed a list of
topics in descending order of most likely topics for each word with
their phi values multiplied by the word count


+*In[15]:*+
[source, ipython3]
----
#LDA model--------------------------------------------------------
lda_model = gensim.models.LdaMulticore(corpus=corpus,
                                       id2word=id2word,
                                       num_topics=10, 
                                       random_state=100,
                                       chunksize=100,
                                       passes=10,
                                       per_word_topics=True)
----


+*Out[15]:*+
----
/Users/jhaelle/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py:287: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.
  and should_run_async(code)
----

It printed the weight each phrase/keyword has within its topic.


+*In[16]:*+
[source, ipython3]
----
#Print the Keyword in the 10 topics-------------------------------
pprint(lda_model.print_topics())
doc_lda = lda_model[corpus]
----


+*Out[16]:*+
----
[(0,
  '0.053*"violation" + 0.044*"offense" + 0.039*"sexual" + 0.021*"person" + '
  '0.020*"child" + 0.017*"individual" + 0.017*"provide" + 0.013*"contact" + '
  '0.013*"aggravate" + 0.010*"convict"'),
 (1,
  '0.041*"child" + 0.020*"family" + 0.018*"treatment" + 0.012*"duty" + '
  '0.012*"program" + 0.012*"qualified_residential" + 0.012*"service" + '
  '0.011*"provide" + 0.011*"need" + 0.010*"officer"'),
 (2,
  '0.022*"provide" + 0.019*"child" + 0.014*"care" + 0.012*"court" + '
  '0.010*"woman" + 0.009*"person" + 0.008*"health" + 0.008*"mean" + '
  '0.007*"include" + 0.007*"order"'),
 (3,
  '0.082*"school" + 0.032*"safety" + 0.027*"public" + 0.026*"provide" + '
  '0.022*"agency" + 0.018*"plan" + 0.015*"board" + 0.015*"local" + '
  '0.015*"education" + 0.011*"student"'),
 (4,
  '0.001*"court" + 0.001*"provide" + 0.001*"child" + 0.001*"service" + '
  '0.001*"judge" + 0.001*"juvenile" + 0.001*"care" + 0.001*"health" + '
  '0.001*"school" + 0.001*"follow"'),
 (5,
  '0.032*"committee" + 0.016*"judge" + 0.014*"service" + 0.011*"member" + '
  '0.011*"resolution" + 0.011*"health" + 0.011*"report" + 0.009*"chairperson" '
  '+ 0.008*"mental" + 0.008*"court"'),
 (6,
  '0.050*"court" + 0.050*"judge" + 0.040*"juvenile" + 0.016*"provide" + '
  '0.014*"commission" + 0.014*"department" + 0.013*"afterschool" + '
  '0.012*"appoint" + 0.011*"time" + 0.011*"health"'),
 (7,
  '0.025*"department" + 0.024*"benefit" + 0.022*"care" + 0.022*"medicaid" + '
  '0.018*"cmo" + 0.018*"pharmacy" + 0.018*"provide" + 0.015*"program" + '
  '0.013*"pay" + 0.011*"cmos"'),
 (8,
  '0.056*"child" + 0.029*"service" + 0.025*"provide" + 0.020*"care" + '
  '0.020*"court" + 0.015*"foster" + 0.014*"youth" + 0.013*"parent" + '
  '0.011*"department" + 0.011*"place"'),
 (9,
  '0.068*"child" + 0.025*"court" + 0.024*"placement" + 0.015*"provide" + '
  '0.013*"care" + 0.012*"include" + 0.011*"change" + 0.011*"service" + '
  '0.011*"dfc" + 0.010*"foster"')]

/Users/jhaelle/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py:287: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.
  and should_run_async(code)
----

The Perplexity was computed to understand the accuracy of the model. The
lower the perplexity is, the better. The Coherence Score was computed to
measure the relative distance between keywords within a topic.


+*In[17]:*+
[source, ipython3]
----
# Perplexity and Coherence Score--------------------------------------------------
# Perplexity
print('\nPerplexity: ', lda_model.log_perplexity(corpus))  
# a measure of how good the model is. lower the better.

# Coherence Score
coherence_model_lda = CoherenceModel(model=lda_model, texts=data_lemmatized, dictionary=id2word, coherence='c_v')
coherence_lda = coherence_model_lda.get_coherence()
print('\nCoherence Score: ', coherence_lda)
----


+*Out[17]:*+
----

Perplexity:  -6.446167795299904

/Users/jhaelle/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py:287: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.
  and should_run_async(code)


Coherence Score:  0.4241751167352971
----

To have a better understanding of the hyperparameters to use, the
algorithm will perform multiple sensitivity tests to determine the
number of topics, the value of alpha(document-topic density) and the
value of beta (word-topic density).


+*In[87]:*+
[source, ipython3]
----
def compute_coherence_values(corpus, dictionary, k, a, b):
    
    lda_model = gensim.models.LdaMulticore(corpus=corpus,
                                           id2word=dictionary,
                                           num_topics=k, 
                                           random_state=100,
                                           chunksize=100,
                                           passes=10,
                                           alpha=a,
                                           eta=b)
    
    coherence_model_lda = CoherenceModel(model=lda_model, texts=data_lemmatized, dictionary=id2word, coherence='c_v')
    
    return coherence_model_lda.get_coherence()
----


+*Out[87]:*+
----
/Users/jhaelle/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py:287: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.
  and should_run_async(code)
----

The function is called, and iterated over the range of topics, alpha,
and beta parameter values. The range for topics was determined by
subjective reasoning, anything less than 2 would create broad topics
while anything over 11 would create unnecessary topics that does not
give useful information because the same keywords will be repeated in
multiple topics. After the iterations, the results are saved in a .csv
file.


+*In[42]:*+
[source, ipython3]
----
grid = {}
grid['Validation_Set'] = {}
# Topics range
min_topics = 2
max_topics = 11
step_size = 1
topics_range = range(min_topics, max_topics, step_size)
# Alpha parameter
alpha = list(np.arange(0.01, 1, 0.3))
alpha.append('symmetric')
alpha.append('asymmetric')
# Beta parameter
beta = list(np.arange(0.01, 1, 0.3))
beta.append('symmetric')
# Validation sets
num_of_docs = len(corpus)
corpus_sets = [ gensim.utils.ClippedCorpus(corpus, int(num_of_docs*0.75)), 
               corpus]
corpus_title = ['75% Corpus', '100% Corpus']
model_results = {'Validation_Set': [],
                 'Topics': [],
                 'Alpha': [],
                 'Beta': [],
                 'Coherence': []
                }

if 1 == 1:
    pbar = tqdm.tqdm(total=540)
    
    # Iterate through validation corpuses
    for i in range(len(corpus_sets)):
        # Iterate through number of topics
        for k in topics_range:
            # Iterate through alpha values
            for a in alpha:
                # Iterate through beta values
                for b in beta:
                    # Coherence score for the given parameters
                    cv = compute_coherence_values(corpus=corpus_sets[i], dictionary=id2word, 
                                                  k=k, a=a, b=b)
                    # Save model 
                    model_results['Validation_Set'].append(corpus_title[i])
                    model_results['Topics'].append(k)
                    model_results['Alpha'].append(a)
                    model_results['Beta'].append(b)
                    model_results['Coherence'].append(cv)
                    
                    pbar.update(1)
    pd.DataFrame(model_results).to_csv('lda_tuning_results.csv', index=False)
    pbar.close()

----


+*Out[42]:*+
----
/Users/jhaelle/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py:287: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.
  and should_run_async(code)

  0%|          | 0/540 [00:00<?, ?it/s][A
  0%|          | 1/540 [00:07<1:04:03,  7.13s/it][A
  0%|          | 2/540 [00:13<1:02:13,  6.94s/it][A
  1%|          | 3/540 [00:20<1:02:23,  6.97s/it][A
  1%|          | 4/540 [00:27<1:02:05,  6.95s/it][A
  1%|          | 5/540 [00:34<1:03:10,  7.08s/it][A
  1%|          | 6/540 [00:41<1:01:27,  6.91s/it][A
  1%|▏         | 7/540 [00:47<58:16,  6.56s/it]  [A
  1%|▏         | 8/540 [00:53<56:56,  6.42s/it][A
  2%|▏         | 9/540 [00:59<55:37,  6.29s/it][A
  2%|▏         | 10/540 [01:05<54:57,  6.22s/it][A
  2%|▏         | 11/540 [01:11<54:13,  6.15s/it][A
  2%|▏         | 12/540 [01:17<53:12,  6.05s/it][A
  2%|▏         | 13/540 [01:22<52:32,  5.98s/it][A
  3%|▎         | 14/540 [01:29<53:15,  6.08s/it][A
  3%|▎         | 15/540 [01:35<52:46,  6.03s/it][A
  3%|▎         | 16/540 [01:41<52:20,  5.99s/it][A
  3%|▎         | 17/540 [01:46<51:43,  5.93s/it][A
  3%|▎         | 18/540 [01:52<51:12,  5.89s/it][A
  4%|▎         | 19/540 [01:58<51:26,  5.92s/it][A
  4%|▎         | 20/540 [02:04<51:43,  5.97s/it][A
  4%|▍         | 21/540 [02:10<52:18,  6.05s/it][A
  4%|▍         | 22/540 [02:16<51:37,  5.98s/it][A
  4%|▍         | 23/540 [02:22<51:09,  5.94s/it][A
  4%|▍         | 24/540 [02:28<51:12,  5.95s/it][A
  5%|▍         | 25/540 [02:34<51:15,  5.97s/it][A
  5%|▍         | 26/540 [02:40<51:58,  6.07s/it][A
  5%|▌         | 27/540 [02:47<53:22,  6.24s/it][A
  5%|▌         | 28/540 [02:53<52:23,  6.14s/it][A
  5%|▌         | 29/540 [02:59<52:00,  6.11s/it][A
  6%|▌         | 30/540 [03:05<51:42,  6.08s/it][A
  6%|▌         | 31/540 [03:11<51:15,  6.04s/it][A
  6%|▌         | 32/540 [03:17<51:00,  6.02s/it][A
  6%|▌         | 33/540 [03:23<50:52,  6.02s/it][A
  6%|▋         | 34/540 [03:29<50:28,  5.99s/it][A
  6%|▋         | 35/540 [03:35<50:48,  6.04s/it][A
  7%|▋         | 36/540 [03:42<52:15,  6.22s/it][A
  7%|▋         | 37/540 [03:47<50:56,  6.08s/it][A
  7%|▋         | 38/540 [03:53<50:21,  6.02s/it][A
  7%|▋         | 39/540 [03:59<49:39,  5.95s/it][A
  7%|▋         | 40/540 [04:05<49:18,  5.92s/it][A
  8%|▊         | 41/540 [04:12<52:16,  6.29s/it][A
  8%|▊         | 42/540 [04:18<51:43,  6.23s/it][A
  8%|▊         | 43/540 [04:24<51:23,  6.20s/it][A
  8%|▊         | 44/540 [04:30<50:44,  6.14s/it][A
  8%|▊         | 45/540 [04:36<50:00,  6.06s/it][A
  9%|▊         | 46/540 [04:42<49:58,  6.07s/it][A
  9%|▊         | 47/540 [09:07<11:26:43, 83.58s/it][A
  9%|▉         | 48/540 [09:15<8:19:39, 60.93s/it] [A
  9%|▉         | 49/540 [09:21<6:05:02, 44.61s/it][A
  9%|▉         | 50/540 [09:28<4:30:20, 33.10s/it][A
  9%|▉         | 51/540 [09:34<3:23:37, 24.98s/it][A
 10%|▉         | 52/540 [09:40<2:37:00, 19.30s/it][A
 10%|▉         | 53/540 [09:46<2:05:44, 15.49s/it][A
 10%|█         | 54/540 [09:52<1:42:27, 12.65s/it][A
 10%|█         | 55/540 [09:59<1:27:59, 10.89s/it][A
 10%|█         | 56/540 [10:05<1:15:54,  9.41s/it][A
 11%|█         | 57/540 [10:11<1:07:32,  8.39s/it][A
 11%|█         | 58/540 [10:17<1:02:08,  7.74s/it][A
 11%|█         | 59/540 [10:23<58:11,  7.26s/it]  [A
 11%|█         | 60/540 [10:29<55:12,  6.90s/it][A
 11%|█▏        | 61/540 [10:35<52:59,  6.64s/it][A
 11%|█▏        | 62/540 [10:41<51:22,  6.45s/it][A
 12%|█▏        | 63/540 [10:48<50:49,  6.39s/it][A
 12%|█▏        | 64/540 [10:54<50:06,  6.32s/it][A
 12%|█▏        | 65/540 [11:00<49:52,  6.30s/it][A
 12%|█▏        | 66/540 [11:06<49:18,  6.24s/it][A
 12%|█▏        | 67/540 [11:12<48:44,  6.18s/it][A
 13%|█▎        | 68/540 [11:19<50:00,  6.36s/it][A
 13%|█▎        | 69/540 [11:25<49:04,  6.25s/it][A
 13%|█▎        | 70/540 [11:31<48:33,  6.20s/it][A
 13%|█▎        | 71/540 [24:17<30:30:24, 234.17s/it][A
 13%|█▎        | 72/540 [24:30<21:48:36, 167.77s/it][A
 14%|█▎        | 73/540 [24:41<15:39:08, 120.66s/it][A
 14%|█▎        | 74/540 [24:48<11:13:28, 86.71s/it] [A
 14%|█▍        | 75/540 [24:55<8:05:22, 62.63s/it] [A
 14%|█▍        | 76/540 [25:01<5:53:30, 45.71s/it][A
 14%|█▍        | 77/540 [25:07<4:21:48, 33.93s/it][A
 14%|█▍        | 78/540 [25:14<3:18:33, 25.79s/it][A
 15%|█▍        | 79/540 [25:21<2:33:19, 19.95s/it][A
 15%|█▍        | 80/540 [25:27<2:01:26, 15.84s/it][A
 15%|█▌        | 81/540 [25:33<1:38:33, 12.88s/it][A
 15%|█▌        | 82/540 [25:39<1:22:53, 10.86s/it][A
 15%|█▌        | 83/540 [25:45<1:11:58,  9.45s/it][A
 16%|█▌        | 84/540 [25:51<1:04:46,  8.52s/it][A
 16%|█▌        | 85/540 [25:57<58:59,  7.78s/it]  [A
 16%|█▌        | 86/540 [26:03<54:50,  7.25s/it][A
 16%|█▌        | 87/540 [26:10<52:00,  6.89s/it][A
 16%|█▋        | 88/540 [26:16<50:09,  6.66s/it][A
 16%|█▋        | 89/540 [26:22<49:33,  6.59s/it][A
 17%|█▋        | 90/540 [26:28<48:33,  6.47s/it][A
 17%|█▋        | 91/540 [26:35<48:56,  6.54s/it][A
 17%|█▋        | 92/540 [26:41<47:48,  6.40s/it][A
 17%|█▋        | 93/540 [26:47<47:08,  6.33s/it][A
 17%|█▋        | 94/540 [26:53<46:40,  6.28s/it][A
 18%|█▊        | 95/540 [26:59<46:09,  6.22s/it][A
 18%|█▊        | 96/540 [27:05<45:28,  6.15s/it][A
 18%|█▊        | 97/540 [31:41<10:41:53, 86.94s/it][A
 18%|█▊        | 98/540 [31:52<7:53:01, 64.21s/it] [A
 18%|█▊        | 99/540 [31:59<5:45:52, 47.06s/it][A
 19%|█▊        | 100/540 [32:06<4:15:48, 34.88s/it][A
 19%|█▊        | 101/540 [32:13<3:15:29, 26.72s/it][A
 19%|█▉        | 102/540 [32:20<2:30:22, 20.60s/it][A
 19%|█▉        | 103/540 [32:26<1:59:05, 16.35s/it][A
 19%|█▉        | 104/540 [32:32<1:37:02, 13.35s/it][A
 19%|█▉        | 105/540 [32:39<1:21:41, 11.27s/it][A
 20%|█▉        | 106/540 [32:45<1:10:41,  9.77s/it][A
 20%|█▉        | 107/540 [32:52<1:03:22,  8.78s/it][A
 20%|██        | 108/540 [32:58<58:11,  8.08s/it]  [A
 20%|██        | 109/540 [33:04<54:27,  7.58s/it][A
 20%|██        | 110/540 [33:11<52:28,  7.32s/it][A
 21%|██        | 111/540 [33:17<50:11,  7.02s/it][A
 21%|██        | 112/540 [33:24<49:03,  6.88s/it][A
 21%|██        | 113/540 [33:30<48:08,  6.76s/it][A
 21%|██        | 114/540 [33:37<47:15,  6.66s/it][A
 21%|██▏       | 115/540 [33:43<46:11,  6.52s/it][A
 21%|██▏       | 116/540 [33:49<45:24,  6.42s/it][A
 22%|██▏       | 117/540 [33:56<45:18,  6.43s/it][A
 22%|██▏       | 118/540 [34:03<46:12,  6.57s/it][A
  0%|          | 0/540 [1:13:33<?, ?it/s].45s/it][A
  0%|          | 0/540 [58:41<?, ?it/s]

 22%|██▏       | 120/540 [50:08<34:06:22, 292.34s/it][A
 22%|██▏       | 121/540 [50:21<24:14:54, 208.34s/it][A
 23%|██▎       | 122/540 [50:29<17:14:20, 148.47s/it][A
 23%|██▎       | 123/540 [50:36<12:16:06, 105.91s/it][A
 23%|██▎       | 124/540 [50:42<8:47:06, 76.03s/it]  [A
 23%|██▎       | 125/540 [50:49<6:21:17, 55.13s/it][A
 23%|██▎       | 126/540 [50:55<4:39:03, 40.44s/it][A
 24%|██▎       | 127/540 [51:02<3:29:02, 30.37s/it][A
 24%|██▎       | 128/540 [51:08<2:39:32, 23.23s/it][A
 24%|██▍       | 129/540 [51:15<2:04:39, 18.20s/it][A
 24%|██▍       | 130/540 [51:21<1:39:53, 14.62s/it][A
 24%|██▍       | 131/540 [51:27<1:22:48, 12.15s/it][A
 24%|██▍       | 132/540 [51:34<1:11:45, 10.55s/it][A
 25%|██▍       | 133/540 [51:41<1:03:06,  9.30s/it][A
 25%|██▍       | 134/540 [51:47<56:50,  8.40s/it]  [A
 25%|██▌       | 135/540 [51:53<52:23,  7.76s/it][A
 25%|██▌       | 136/540 [52:00<49:39,  7.38s/it][A
 25%|██▌       | 137/540 [52:06<48:31,  7.22s/it][A
 26%|██▌       | 138/540 [52:13<46:46,  6.98s/it][A
 26%|██▌       | 139/540 [52:19<45:19,  6.78s/it][A
 26%|██▌       | 140/540 [52:26<44:25,  6.66s/it][A
 26%|██▌       | 141/540 [52:32<43:54,  6.60s/it][A
 26%|██▋       | 142/540 [52:40<45:54,  6.92s/it][A
 26%|██▋       | 143/540 [52:46<43:57,  6.64s/it][A
 27%|██▋       | 144/540 [52:52<42:38,  6.46s/it][A
 27%|██▋       | 145/540 [54:03<2:50:03, 25.83s/it][A
 27%|██▋       | 146/540 [54:13<2:18:22, 21.07s/it][A
 27%|██▋       | 147/540 [54:20<1:50:17, 16.84s/it][A
 27%|██▋       | 148/540 [54:26<1:29:24, 13.69s/it][A
 28%|██▊       | 149/540 [54:33<1:15:32, 11.59s/it][A
 28%|██▊       | 150/540 [54:41<1:08:19, 10.51s/it][A
 28%|██▊       | 151/540 [54:50<1:06:02, 10.19s/it][A
 28%|██▊       | 152/540 [54:57<58:27,  9.04s/it]  [A
 28%|██▊       | 153/540 [55:03<53:18,  8.26s/it][A
 29%|██▊       | 154/540 [55:09<49:37,  7.71s/it][A
 29%|██▊       | 155/540 [55:16<47:15,  7.37s/it][A
 29%|██▉       | 156/540 [55:23<46:27,  7.26s/it][A
 29%|██▉       | 157/540 [55:30<46:01,  7.21s/it][A
 29%|██▉       | 158/540 [55:37<44:55,  7.06s/it][A
 29%|██▉       | 159/540 [55:43<43:34,  6.86s/it][A
 30%|██▉       | 160/540 [55:50<42:56,  6.78s/it][A
 30%|██▉       | 161/540 [55:57<43:41,  6.92s/it][A
 30%|███       | 162/540 [56:04<43:14,  6.86s/it][A
 30%|███       | 163/540 [56:10<42:40,  6.79s/it][A
 30%|███       | 164/540 [56:17<42:07,  6.72s/it][A
 31%|███       | 165/540 [1:00:01<7:29:08, 71.86s/it][A
 31%|███       | 166/540 [1:00:10<5:30:46, 53.07s/it][A
 31%|███       | 167/540 [1:00:17<4:03:29, 39.17s/it][A
 31%|███       | 168/540 [1:00:23<3:02:08, 29.38s/it][A
 31%|███▏      | 169/540 [1:00:30<2:18:57, 22.47s/it][A
 31%|███▏      | 170/540 [1:00:36<1:48:40, 17.62s/it][A
 32%|███▏      | 171/540 [1:00:42<1:27:36, 14.25s/it][A
 32%|███▏      | 172/540 [1:00:49<1:12:39, 11.85s/it][A
 32%|███▏      | 173/540 [1:00:55<1:02:57, 10.29s/it][A
 32%|███▏      | 174/540 [1:01:02<56:24,  9.25s/it]  [A
 32%|███▏      | 175/540 [1:01:08<50:47,  8.35s/it][A
 33%|███▎      | 176/540 [1:01:15<48:13,  7.95s/it][A
 33%|███▎      | 177/540 [1:01:22<45:05,  7.45s/it][A
 33%|███▎      | 178/540 [1:01:28<43:24,  7.19s/it][A
 33%|███▎      | 179/540 [1:01:36<43:47,  7.28s/it][A
 33%|███▎      | 180/540 [1:01:42<41:45,  6.96s/it][A
 34%|███▎      | 181/540 [1:01:48<40:55,  6.84s/it][A
 34%|███▎      | 182/540 [1:01:55<41:09,  6.90s/it][A
 34%|███▍      | 183/540 [1:02:02<40:14,  6.76s/it][A
 34%|███▍      | 184/540 [1:02:09<39:57,  6.74s/it][A
 34%|███▍      | 185/540 [1:02:59<1:57:31, 19.86s/it][A
 34%|███▍      | 186/540 [1:03:07<1:36:46, 16.40s/it][A
 35%|███▍      | 187/540 [1:03:14<1:20:00, 13.60s/it][A
 35%|███▍      | 188/540 [1:03:22<1:08:54, 11.75s/it][A
 35%|███▌      | 189/540 [1:03:28<59:19, 10.14s/it]  [A
 35%|███▌      | 190/540 [1:03:35<52:38,  9.02s/it][A
 35%|███▌      | 191/540 [1:03:42<48:45,  8.38s/it][A
 36%|███▌      | 192/540 [1:03:48<45:55,  7.92s/it][A
 36%|███▌      | 193/540 [1:03:55<43:55,  7.59s/it][A
 36%|███▌      | 194/540 [1:04:02<41:42,  7.23s/it][A
 36%|███▌      | 195/540 [1:04:08<40:36,  7.06s/it][A
 36%|███▋      | 196/540 [1:04:15<39:58,  6.97s/it][A
 36%|███▋      | 197/540 [1:04:22<39:30,  6.91s/it][A
 37%|███▋      | 198/540 [1:04:29<39:18,  6.90s/it][A
 37%|███▋      | 199/540 [1:04:35<38:15,  6.73s/it][A
 37%|███▋      | 200/540 [1:04:42<38:18,  6.76s/it][A
 37%|███▋      | 201/540 [1:04:49<38:09,  6.75s/it][A
 37%|███▋      | 202/540 [1:04:55<38:05,  6.76s/it][A
 38%|███▊      | 203/540 [1:05:02<37:51,  6.74s/it][A
 38%|███▊      | 204/540 [1:05:08<37:03,  6.62s/it][A
 38%|███▊      | 205/540 [1:05:15<36:47,  6.59s/it][A
 38%|███▊      | 206/540 [1:05:22<36:51,  6.62s/it][A
 38%|███▊      | 207/540 [1:05:28<36:58,  6.66s/it][A
 39%|███▊      | 208/540 [1:05:35<36:53,  6.67s/it][A
 39%|███▊      | 209/540 [1:05:42<37:28,  6.79s/it][A
 39%|███▉      | 210/540 [1:05:48<36:24,  6.62s/it][A
 39%|███▉      | 211/540 [1:05:55<36:29,  6.66s/it][A
 39%|███▉      | 212/540 [1:10:23<7:45:03, 85.07s/it][A
 39%|███▉      | 213/540 [1:10:31<5:37:12, 61.87s/it][A
 40%|███▉      | 214/540 [1:10:38<4:06:35, 45.38s/it][A
 40%|███▉      | 215/540 [1:10:45<3:03:28, 33.87s/it][A
 40%|████      | 216/540 [1:10:52<2:18:59, 25.74s/it][A
 40%|████      | 217/540 [1:10:59<1:48:13, 20.10s/it][A
 40%|████      | 218/540 [1:11:05<1:26:07, 16.05s/it][A
 41%|████      | 219/540 [1:11:12<1:10:57, 13.26s/it][A
 41%|████      | 220/540 [1:11:19<1:00:31, 11.35s/it][A
 41%|████      | 221/540 [1:11:26<53:01,  9.97s/it]  [A
 41%|████      | 222/540 [1:11:32<47:47,  9.02s/it][A
 41%|████▏     | 223/540 [1:11:39<43:39,  8.26s/it][A
 41%|████▏     | 224/540 [1:11:46<41:09,  7.82s/it][A
 42%|████▏     | 225/540 [1:11:52<39:29,  7.52s/it][A
 42%|████▏     | 226/540 [1:12:01<40:31,  7.74s/it][A
 42%|████▏     | 227/540 [1:12:07<38:37,  7.40s/it][A
 42%|████▏     | 228/540 [1:12:14<37:36,  7.23s/it][A
 42%|████▏     | 229/540 [1:12:21<36:41,  7.08s/it][A
 43%|████▎     | 230/540 [1:12:27<35:35,  6.89s/it][A
 43%|████▎     | 231/540 [1:12:34<35:00,  6.80s/it][A
 43%|████▎     | 232/540 [1:12:40<34:18,  6.68s/it][A
 43%|████▎     | 233/540 [1:12:47<33:30,  6.55s/it][A
 43%|████▎     | 234/540 [1:13:48<1:56:48, 22.90s/it][A
 44%|████▎     | 235/540 [1:13:54<1:31:53, 18.08s/it][A
 44%|████▎     | 236/540 [1:14:02<1:14:57, 14.80s/it][A
 44%|████▍     | 237/540 [1:14:08<1:02:17, 12.33s/it][A
 44%|████▍     | 238/540 [1:14:15<53:39, 10.66s/it]  [A
 44%|████▍     | 239/540 [1:14:21<47:21,  9.44s/it][A
 44%|████▍     | 240/540 [1:14:28<43:04,  8.62s/it][A
 45%|████▍     | 241/540 [1:14:35<40:34,  8.14s/it][A
 45%|████▍     | 242/540 [1:14:42<38:03,  7.66s/it][A
 45%|████▌     | 243/540 [1:14:48<36:20,  7.34s/it][A
 45%|████▌     | 244/540 [1:14:55<35:07,  7.12s/it][A
 45%|████▌     | 245/540 [1:15:02<34:13,  6.96s/it][A
 46%|████▌     | 246/540 [1:15:09<34:17,  7.00s/it][A
 46%|████▌     | 247/540 [1:15:15<33:50,  6.93s/it][A
 46%|████▌     | 248/540 [1:15:22<33:28,  6.88s/it][A
 46%|████▌     | 249/540 [1:15:29<32:51,  6.77s/it][A
 46%|████▋     | 250/540 [1:15:35<32:39,  6.76s/it][A
 46%|████▋     | 251/540 [1:15:43<33:35,  6.97s/it][A
 47%|████▋     | 252/540 [1:15:49<32:55,  6.86s/it][A
 47%|████▋     | 253/540 [1:15:56<32:20,  6.76s/it][A
 47%|████▋     | 254/540 [1:19:42<5:45:11, 72.42s/it][A
 47%|████▋     | 255/540 [1:19:50<4:12:04, 53.07s/it][A
 47%|████▋     | 256/540 [1:19:58<3:07:20, 39.58s/it][A
 48%|████▊     | 257/540 [1:20:05<2:20:53, 29.87s/it][A
 48%|████▊     | 258/540 [1:20:12<1:48:08, 23.01s/it][A
 48%|████▊     | 259/540 [1:20:19<1:25:30, 18.26s/it][A
 48%|████▊     | 260/540 [1:20:26<1:09:49, 14.96s/it][A
 48%|████▊     | 261/540 [1:20:33<58:16, 12.53s/it]  [A
 49%|████▊     | 262/540 [1:20:40<49:59, 10.79s/it][A
 49%|████▊     | 263/540 [1:20:46<43:53,  9.51s/it][A
 49%|████▉     | 264/540 [1:20:53<40:13,  8.74s/it][A
 49%|████▉     | 265/540 [1:21:01<37:59,  8.29s/it][A
 49%|████▉     | 266/540 [1:21:08<36:03,  7.90s/it][A
 49%|████▉     | 267/540 [1:21:15<35:07,  7.72s/it][A
 50%|████▉     | 268/540 [1:21:21<33:28,  7.39s/it][A
 50%|████▉     | 269/540 [1:21:28<32:26,  7.18s/it][A
 50%|█████     | 270/540 [1:21:35<32:11,  7.16s/it][A
 50%|█████     | 271/540 [1:21:41<30:36,  6.83s/it][A
 50%|█████     | 272/540 [1:21:47<29:23,  6.58s/it][A
 51%|█████     | 273/540 [1:21:53<28:26,  6.39s/it][A
 51%|█████     | 274/540 [1:22:02<30:51,  6.96s/it][A
 51%|█████     | 275/540 [1:22:07<29:14,  6.62s/it][A
 51%|█████     | 276/540 [1:22:13<28:16,  6.43s/it][A
 51%|█████▏    | 277/540 [1:23:10<1:33:50, 21.41s/it][A
 51%|█████▏    | 278/540 [1:23:17<1:14:41, 17.10s/it][A
 52%|█████▏    | 279/540 [1:23:23<1:00:14, 13.85s/it][A
 52%|█████▏    | 280/540 [1:23:30<50:31, 11.66s/it]  [A
 52%|█████▏    | 281/540 [1:23:36<43:16, 10.03s/it][A
 52%|█████▏    | 282/540 [1:23:42<38:12,  8.89s/it][A
 52%|█████▏    | 283/540 [1:23:49<35:23,  8.26s/it][A
 53%|█████▎    | 284/540 [1:23:55<32:36,  7.64s/it][A
 53%|█████▎    | 285/540 [1:24:01<30:45,  7.24s/it][A
 53%|█████▎    | 286/540 [1:24:07<29:10,  6.89s/it][A
 53%|█████▎    | 287/540 [1:24:14<28:09,  6.68s/it][A
 53%|█████▎    | 288/540 [1:24:20<27:55,  6.65s/it][A
 54%|█████▎    | 289/540 [1:24:26<27:17,  6.52s/it][A
 54%|█████▎    | 290/540 [1:24:33<26:53,  6.45s/it][A
 54%|█████▍    | 291/540 [1:24:39<26:21,  6.35s/it][A
 54%|█████▍    | 292/540 [1:24:45<25:56,  6.28s/it][A
 54%|█████▍    | 293/540 [1:24:51<26:02,  6.33s/it][A
 54%|█████▍    | 294/540 [1:24:58<25:55,  6.32s/it][A
 55%|█████▍    | 295/540 [1:25:04<25:45,  6.31s/it][A
 55%|█████▍    | 296/540 [1:25:10<25:27,  6.26s/it][A
 55%|█████▌    | 297/540 [1:25:16<25:11,  6.22s/it][A
 55%|█████▌    | 298/540 [1:25:23<25:19,  6.28s/it][A
 55%|█████▌    | 299/540 [1:25:29<25:27,  6.34s/it][A
 56%|█████▌    | 300/540 [1:25:35<25:03,  6.27s/it][A
 56%|█████▌    | 301/540 [1:25:41<24:27,  6.14s/it][A
 56%|█████▌    | 302/540 [1:26:34<1:19:28, 20.04s/it][A
 56%|█████▌    | 303/540 [1:26:41<1:04:19, 16.29s/it][A
 56%|█████▋    | 304/540 [1:26:48<52:32, 13.36s/it]  [A
 56%|█████▋    | 305/540 [1:26:54<43:52, 11.20s/it][A
 57%|█████▋    | 306/540 [1:27:00<37:56,  9.73s/it][A
 57%|█████▋    | 307/540 [1:27:06<33:50,  8.72s/it][A
 57%|█████▋    | 308/540 [1:27:13<31:05,  8.04s/it][A
 57%|█████▋    | 309/540 [1:27:19<28:57,  7.52s/it][A
 57%|█████▋    | 310/540 [1:27:25<27:12,  7.10s/it][A
 58%|█████▊    | 311/540 [1:27:32<26:08,  6.85s/it][A
 58%|█████▊    | 312/540 [1:27:38<25:31,  6.72s/it][A
 58%|█████▊    | 313/540 [1:27:45<25:16,  6.68s/it][A
 58%|█████▊    | 314/540 [1:27:51<24:53,  6.61s/it][A
 58%|█████▊    | 315/540 [1:27:57<24:18,  6.48s/it][A
 59%|█████▊    | 316/540 [1:28:03<23:53,  6.40s/it][A
 59%|█████▊    | 317/540 [1:28:10<24:04,  6.48s/it][A
 59%|█████▉    | 318/540 [1:28:17<24:30,  6.62s/it][A
 59%|█████▉    | 319/540 [1:28:24<25:13,  6.85s/it][A
 59%|█████▉    | 320/540 [1:28:31<24:54,  6.79s/it][A
 59%|█████▉    | 321/540 [1:28:37<24:12,  6.63s/it][A
 60%|█████▉    | 322/540 [1:28:44<23:45,  6.54s/it][A
 60%|█████▉    | 323/540 [1:28:51<24:18,  6.72s/it][A
 60%|██████    | 324/540 [1:28:57<23:48,  6.61s/it][A
 60%|██████    | 325/540 [1:29:03<23:10,  6.47s/it][A
 60%|██████    | 326/540 [2:29:09<64:34:38, 1086.35s/it][A
 61%|██████    | 327/540 [6:34:54<306:42:13, 5183.72s/it][A
 61%|██████    | 328/540 [6:35:02<213:50:04, 3631.15s/it][A
 61%|██████    | 329/540 [6:35:14<149:11:14, 2545.38s/it][A
 61%|██████    | 330/540 [7:13:36<144:12:49, 2472.24s/it][A
 61%|██████▏   | 331/540 [7:13:43<100:36:19, 1732.91s/it][A
 61%|██████▏   | 332/540 [7:13:51<70:13:01, 1215.30s/it] [A
 62%|██████▏   | 333/540 [7:13:58<49:02:38, 852.94s/it] [A
 62%|██████▏   | 334/540 [7:14:05<34:17:04, 599.15s/it][A
 62%|██████▏   | 335/540 [7:14:13<24:00:58, 421.75s/it][A
 62%|██████▏   | 336/540 [7:14:20<16:50:50, 297.31s/it][A
 62%|██████▏   | 337/540 [7:14:27<11:50:59, 210.15s/it][A
 63%|██████▎   | 338/540 [7:14:34<8:22:12, 149.17s/it] [A
 63%|██████▎   | 339/540 [7:14:40<5:56:19, 106.36s/it][A
 63%|██████▎   | 340/540 [7:14:47<4:15:09, 76.55s/it] [A
 63%|██████▎   | 341/540 [7:14:54<3:04:26, 55.61s/it][A
 63%|██████▎   | 342/540 [7:15:00<2:14:49, 40.85s/it][A
 64%|██████▎   | 343/540 [7:15:07<1:40:24, 30.58s/it][A
 64%|██████▎   | 344/540 [7:15:13<1:16:08, 23.31s/it][A
 64%|██████▍   | 345/540 [7:15:20<59:43, 18.38s/it]  [A
 64%|██████▍   | 346/540 [7:15:27<48:01, 14.85s/it][A
 64%|██████▍   | 347/540 [7:15:33<39:30, 12.28s/it][A
 64%|██████▍   | 348/540 [7:15:40<33:51, 10.58s/it][A
 65%|██████▍   | 349/540 [7:15:47<30:17,  9.51s/it][A
 65%|██████▍   | 350/540 [7:15:59<32:59, 10.42s/it][A
 65%|██████▌   | 351/540 [7:16:16<39:10, 12.44s/it][A
 65%|██████▌   | 352/540 [7:16:31<40:39, 12.98s/it][A
 65%|██████▌   | 353/540 [7:16:42<38:40, 12.41s/it][A
 66%|██████▌   | 354/540 [7:16:53<37:37, 12.14s/it][A
 66%|██████▌   | 355/540 [7:17:02<33:47, 10.96s/it][A
 66%|██████▌   | 356/540 [7:17:08<29:56,  9.76s/it][A
 66%|██████▌   | 357/540 [7:17:17<28:16,  9.27s/it][A
 66%|██████▋   | 358/540 [7:17:24<26:45,  8.82s/it][A
 66%|██████▋   | 359/540 [7:17:32<25:25,  8.43s/it][A
 67%|██████▋   | 360/540 [7:17:39<23:55,  7.98s/it][A
 67%|██████▋   | 361/540 [7:17:46<22:53,  7.67s/it][A
 67%|██████▋   | 362/540 [7:17:52<21:46,  7.34s/it][A
 67%|██████▋   | 363/540 [7:18:01<22:47,  7.72s/it][A
 67%|██████▋   | 364/540 [7:18:14<27:20,  9.32s/it][A
 68%|██████▊   | 365/540 [7:18:21<25:15,  8.66s/it][A
 68%|██████▊   | 366/540 [7:18:28<23:45,  8.19s/it][A
 68%|██████▊   | 367/540 [7:18:35<22:04,  7.66s/it][A
 68%|██████▊   | 368/540 [7:18:41<21:06,  7.36s/it][A
 68%|██████▊   | 369/540 [7:18:50<22:27,  7.88s/it][A
 69%|██████▊   | 370/540 [7:18:57<21:33,  7.61s/it][A
 69%|██████▊   | 371/540 [7:19:04<20:51,  7.40s/it][A
 69%|██████▉   | 372/540 [7:19:11<20:01,  7.15s/it][A
 69%|██████▉   | 373/540 [7:19:17<19:28,  6.99s/it][A
 69%|██████▉   | 374/540 [7:19:24<19:19,  6.99s/it][A
 69%|██████▉   | 375/540 [7:19:31<18:52,  6.87s/it][A
 70%|██████▉   | 376/540 [7:19:38<18:49,  6.88s/it][A
 70%|██████▉   | 377/540 [7:19:44<18:22,  6.76s/it][A
 70%|███████   | 378/540 [7:19:51<18:21,  6.80s/it][A
 70%|███████   | 379/540 [7:19:58<18:30,  6.90s/it][A
 70%|███████   | 380/540 [7:20:05<18:28,  6.93s/it][A
 71%|███████   | 381/540 [7:20:12<18:11,  6.86s/it][A
 71%|███████   | 382/540 [7:20:19<17:43,  6.73s/it][A
 71%|███████   | 383/540 [7:20:25<17:38,  6.74s/it][A
 71%|███████   | 384/540 [7:20:32<17:42,  6.81s/it][A
 71%|███████▏  | 385/540 [7:20:39<17:37,  6.82s/it][A
 71%|███████▏  | 386/540 [7:20:46<17:36,  6.86s/it][A
 72%|███████▏  | 387/540 [7:20:53<17:16,  6.78s/it][A
 72%|███████▏  | 388/540 [7:20:59<17:01,  6.72s/it][A
 72%|███████▏  | 389/540 [7:21:06<16:52,  6.70s/it][A
 72%|███████▏  | 390/540 [7:21:13<16:58,  6.79s/it][A
 72%|███████▏  | 391/540 [7:21:21<17:55,  7.22s/it][A
 73%|███████▎  | 392/540 [7:21:28<17:30,  7.10s/it][A
 73%|███████▎  | 393/540 [7:21:35<17:07,  6.99s/it][A
 73%|███████▎  | 394/540 [7:21:41<16:50,  6.92s/it][A
 73%|███████▎  | 395/540 [7:21:49<16:49,  6.96s/it][A
 73%|███████▎  | 396/540 [7:21:55<16:38,  6.93s/it][A
 74%|███████▎  | 397/540 [7:22:02<16:21,  6.86s/it][A
 74%|███████▎  | 398/540 [7:22:09<16:12,  6.85s/it][A
 74%|███████▍  | 399/540 [7:22:16<16:05,  6.85s/it][A
 74%|███████▍  | 400/540 [7:22:22<15:50,  6.79s/it][A
 74%|███████▍  | 401/540 [7:22:29<15:44,  6.80s/it][A
 74%|███████▍  | 402/540 [7:22:36<15:36,  6.79s/it][A
 75%|███████▍  | 403/540 [7:22:43<15:52,  6.95s/it][A
 75%|███████▍  | 404/540 [7:22:50<15:38,  6.90s/it][A
 75%|███████▌  | 405/540 [7:22:57<15:19,  6.81s/it][A
 75%|███████▌  | 406/540 [7:23:04<15:11,  6.80s/it][A
 75%|███████▌  | 407/540 [7:23:10<15:00,  6.77s/it][A
 76%|███████▌  | 408/540 [7:23:17<14:52,  6.76s/it][A
 76%|███████▌  | 409/540 [7:23:24<14:46,  6.77s/it][A
 76%|███████▌  | 410/540 [7:23:30<14:35,  6.73s/it][A
 76%|███████▌  | 411/540 [7:23:37<14:27,  6.72s/it][A
 76%|███████▋  | 412/540 [7:23:44<14:17,  6.70s/it][A
 76%|███████▋  | 413/540 [7:23:51<14:14,  6.73s/it][A
 77%|███████▋  | 414/540 [7:24:02<17:19,  8.25s/it][A
 77%|███████▋  | 415/540 [7:24:11<17:44,  8.51s/it][A
 77%|███████▋  | 416/540 [7:24:19<16:47,  8.12s/it][A
 77%|███████▋  | 417/540 [7:24:26<15:52,  7.74s/it][A
 77%|███████▋  | 418/540 [7:24:32<15:04,  7.41s/it][A
 78%|███████▊  | 419/540 [7:24:39<14:27,  7.17s/it][A
 78%|███████▊  | 420/540 [7:24:45<14:01,  7.01s/it][A
 78%|███████▊  | 421/540 [7:24:52<13:45,  6.94s/it][A
 78%|███████▊  | 422/540 [7:24:59<13:29,  6.86s/it][A
 78%|███████▊  | 423/540 [7:25:06<13:16,  6.81s/it][A
 79%|███████▊  | 424/540 [7:25:12<13:06,  6.78s/it][A
 79%|███████▊  | 425/540 [7:25:19<12:58,  6.77s/it][A
 79%|███████▉  | 426/540 [7:25:26<12:58,  6.83s/it][A
 79%|███████▉  | 427/540 [7:25:33<12:57,  6.88s/it][A
 79%|███████▉  | 428/540 [7:25:40<13:09,  7.05s/it][A
 79%|███████▉  | 429/540 [7:25:48<13:15,  7.17s/it][A
 80%|███████▉  | 430/540 [7:25:56<13:25,  7.33s/it][A
 80%|███████▉  | 431/540 [7:26:03<13:17,  7.32s/it][A
 80%|████████  | 432/540 [7:26:10<12:52,  7.15s/it][A
 80%|████████  | 433/540 [7:26:17<12:38,  7.08s/it][A
 80%|████████  | 434/540 [7:26:23<12:20,  6.99s/it][A
 81%|████████  | 435/540 [7:26:30<12:12,  6.98s/it][A
 81%|████████  | 436/540 [7:26:37<12:04,  6.97s/it][A
 81%|████████  | 437/540 [7:26:44<11:51,  6.91s/it][A
 81%|████████  | 438/540 [7:26:51<11:46,  6.92s/it][A
 81%|████████▏ | 439/540 [7:26:58<11:42,  6.96s/it][A
 81%|████████▏ | 440/540 [7:27:05<11:39,  6.99s/it][A
 82%|████████▏ | 441/540 [7:27:12<11:24,  6.92s/it][A
 82%|████████▏ | 442/540 [7:27:19<11:13,  6.87s/it][A
 82%|████████▏ | 443/540 [7:27:25<11:01,  6.82s/it][A
 82%|████████▏ | 444/540 [7:27:32<10:56,  6.84s/it][A
 82%|████████▏ | 445/540 [7:27:39<10:55,  6.90s/it][A
 83%|████████▎ | 446/540 [7:27:47<11:21,  7.25s/it][A
 83%|████████▎ | 447/540 [7:27:55<11:24,  7.37s/it][A
 83%|████████▎ | 448/540 [7:28:03<11:25,  7.45s/it][A
 83%|████████▎ | 449/540 [7:28:09<11:04,  7.31s/it][A
 83%|████████▎ | 450/540 [7:28:16<10:40,  7.12s/it][A
 84%|████████▎ | 451/540 [7:28:23<10:31,  7.09s/it][A
 84%|████████▎ | 452/540 [7:28:30<10:15,  6.99s/it][A
 84%|████████▍ | 453/540 [7:28:37<10:00,  6.90s/it][A
 84%|████████▍ | 454/540 [7:28:44<09:54,  6.91s/it][A
 84%|████████▍ | 455/540 [7:28:50<09:45,  6.89s/it][A
 84%|████████▍ | 456/540 [7:28:57<09:42,  6.94s/it][A
 85%|████████▍ | 457/540 [7:29:04<09:30,  6.88s/it][A
 85%|████████▍ | 458/540 [7:29:11<09:20,  6.83s/it][A
 85%|████████▌ | 459/540 [7:29:18<09:12,  6.82s/it][A
 85%|████████▌ | 460/540 [7:29:25<09:04,  6.81s/it][A
 85%|████████▌ | 461/540 [7:29:32<09:07,  6.93s/it][A
 86%|████████▌ | 462/540 [7:29:39<09:17,  7.15s/it][A
 86%|████████▌ | 463/540 [7:29:46<09:03,  7.06s/it][A
 86%|████████▌ | 464/540 [7:29:53<08:52,  7.01s/it][A
 86%|████████▌ | 465/540 [7:30:00<08:40,  6.94s/it][A
 86%|████████▋ | 466/540 [7:30:08<08:48,  7.15s/it][A
 86%|████████▋ | 467/540 [7:30:17<09:32,  7.84s/it][A
 87%|████████▋ | 468/540 [7:30:24<09:14,  7.70s/it][A
 87%|████████▋ | 469/540 [7:30:31<08:46,  7.42s/it][A
 87%|████████▋ | 470/540 [7:30:38<08:24,  7.21s/it][A
 87%|████████▋ | 471/540 [7:35:20<1:43:18, 89.84s/it][A
 87%|████████▋ | 472/540 [7:35:35<1:16:15, 67.28s/it][A
 88%|████████▊ | 473/540 [7:35:43<55:18, 49.53s/it]  [A
 88%|████████▊ | 474/540 [7:35:51<40:34, 36.88s/it][A
 88%|████████▊ | 475/540 [7:35:59<30:35, 28.24s/it][A
 88%|████████▊ | 476/540 [7:36:06<23:24, 21.94s/it][A
 88%|████████▊ | 477/540 [7:36:13<18:27, 17.57s/it][A
 89%|████████▊ | 478/540 [7:36:21<15:08, 14.66s/it][A
 89%|████████▊ | 479/540 [7:36:28<12:37, 12.42s/it][A
 89%|████████▉ | 480/540 [7:36:35<10:45, 10.76s/it][A
 89%|████████▉ | 481/540 [7:36:42<09:32,  9.71s/it][A
 89%|████████▉ | 482/540 [7:36:50<08:45,  9.06s/it][A
 89%|████████▉ | 483/540 [7:36:57<08:02,  8.46s/it][A
 90%|████████▉ | 484/540 [7:37:04<07:28,  8.01s/it][A
 90%|████████▉ | 485/540 [7:37:11<07:02,  7.68s/it][A
 90%|█████████ | 486/540 [7:37:20<07:12,  8.02s/it][A
 90%|█████████ | 487/540 [7:37:27<06:57,  7.89s/it][A
 90%|█████████ | 488/540 [7:37:34<06:35,  7.60s/it][A
 91%|█████████ | 489/540 [7:37:42<06:32,  7.69s/it][A
 91%|█████████ | 490/540 [7:37:49<06:11,  7.43s/it][A
 91%|█████████ | 491/540 [7:39:10<24:04, 29.47s/it][A
 91%|█████████ | 492/540 [7:39:23<19:34, 24.47s/it][A
 91%|█████████▏| 493/540 [7:39:32<15:40, 20.01s/it][A
 91%|█████████▏| 494/540 [7:39:40<12:33, 16.37s/it][A
 92%|█████████▏| 495/540 [7:39:48<10:15, 13.67s/it][A
 92%|█████████▏| 496/540 [7:39:55<08:36, 11.73s/it][A
 92%|█████████▏| 497/540 [7:40:02<07:22, 10.29s/it][A
 92%|█████████▏| 498/540 [7:40:09<06:32,  9.34s/it][A
 92%|█████████▏| 499/540 [7:40:16<05:57,  8.72s/it][A
 93%|█████████▎| 500/540 [7:40:23<05:28,  8.21s/it][A
 93%|█████████▎| 501/540 [7:40:30<05:06,  7.86s/it][A
 93%|█████████▎| 502/540 [7:40:38<04:56,  7.79s/it][A
 93%|█████████▎| 503/540 [7:40:45<04:40,  7.59s/it][A
 93%|█████████▎| 504/540 [7:40:52<04:26,  7.40s/it][A
 94%|█████████▎| 505/540 [7:40:59<04:14,  7.28s/it][A
 94%|█████████▎| 506/540 [7:41:06<04:05,  7.21s/it][A
 94%|█████████▍| 507/540 [7:41:13<03:56,  7.17s/it][A
 94%|█████████▍| 508/540 [7:41:20<03:49,  7.17s/it][A
 94%|█████████▍| 509/540 [7:41:27<03:40,  7.10s/it][A
 94%|█████████▍| 510/540 [7:41:34<03:31,  7.05s/it][A
 95%|█████████▍| 511/540 [7:41:43<03:42,  7.67s/it][A
 95%|█████████▍| 512/540 [7:41:50<03:25,  7.35s/it][A
 95%|█████████▌| 513/540 [7:43:27<15:29, 34.42s/it][A
 95%|█████████▌| 514/540 [7:43:36<11:35, 26.74s/it][A
 95%|█████████▌| 515/540 [7:43:43<08:42, 20.89s/it][A
 96%|█████████▌| 516/540 [7:43:51<06:46, 16.92s/it][A
 96%|█████████▌| 517/540 [7:43:58<05:20, 13.94s/it][A
 96%|█████████▌| 518/540 [7:44:05<04:23, 11.96s/it][A
 96%|█████████▌| 519/540 [7:44:13<03:41, 10.54s/it][A
 96%|█████████▋| 520/540 [7:44:20<03:09,  9.49s/it][A
 96%|█████████▋| 521/540 [7:44:27<02:48,  8.89s/it][A
 97%|█████████▋| 522/540 [7:44:34<02:29,  8.32s/it][A
 97%|█████████▋| 523/540 [7:44:41<02:14,  7.91s/it][A
 97%|█████████▋| 524/540 [7:44:48<02:02,  7.68s/it][A
 97%|█████████▋| 525/540 [7:44:56<01:54,  7.61s/it][A
 97%|█████████▋| 526/540 [7:45:03<01:45,  7.55s/it][A
 98%|█████████▊| 527/540 [7:45:10<01:35,  7.37s/it][A
 98%|█████████▊| 528/540 [7:45:17<01:27,  7.25s/it][A
 98%|█████████▊| 529/540 [7:45:24<01:19,  7.26s/it][A
 98%|█████████▊| 530/540 [7:45:32<01:13,  7.30s/it][A
 98%|█████████▊| 531/540 [7:45:39<01:06,  7.36s/it][A
 99%|█████████▊| 532/540 [7:45:46<00:56,  7.12s/it][A
 99%|█████████▊| 533/540 [7:45:53<00:49,  7.04s/it][A
 99%|█████████▉| 534/540 [7:48:27<05:08, 51.34s/it][A
 99%|█████████▉| 535/540 [7:48:36<03:12, 38.41s/it][A
 99%|█████████▉| 536/540 [7:48:44<01:57, 29.32s/it][A
 99%|█████████▉| 537/540 [7:48:51<01:08, 22.85s/it][A
100%|█████████▉| 538/540 [7:48:59<00:36, 18.18s/it][A
100%|█████████▉| 539/540 [7:49:06<00:14, 14.94s/it][A
100%|██████████| 540/540 [7:49:13<00:00, 52.14s/it][A
----

This graph is a measure of the coherence score per number of topics.
After 6 topics there is drop off in coherence scores, therefore the
value of the parameter for number of topics is 6. The value of the alpha
and beta parameter corresponds with the highest coherence score for 7
topics, which are .91 and .61 respectively.


+*In[106]:*+
[source, ipython3]
----
data=pd.read_csv('/Users/jhaelle/Desktop/PythonRB/LDAResults.csv')
plt.scatter(data.Topics, data.Coherence)
plt.xlabel("Number of Topics")
plt.ylabel("Coherence Score")
plt.show()
----


+*Out[106]:*+
----
/Users/jhaelle/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py:287: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.
  and should_run_async(code)

![png](output_29_1.png)
----

This is the final Latent Dirichlet allocation model with all parameter
values.


+*In[111]:*+
[source, ipython3]
----
#Final Model----------------------------------------------
lda_model = gensim.models.LdaMulticore(corpus=corpus,
                                           id2word=id2word,
                                           num_topics=6, 
                                           random_state=100,
                                           chunksize=100,
                                           passes=10,
                                           alpha=0.91,
                                           eta=0.61)
----


+*Out[111]:*+
----
/Users/jhaelle/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py:287: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.
  and should_run_async(code)
----

A visualization of the most relevant terms for each topic.


+*In[112]:*+
[source, ipython3]
----
#Visualize------------------------------------------------
pyLDAvis.enable_notebook()
LDAvis_prepared = pyLDAvis.gensim_models.prepare(lda_model, corpus, id2word)
LDAvis_prepared
----


+*Out[112]:*+
----
/Users/jhaelle/opt/anaconda3/lib/python3.8/site-packages/ipykernel/ipkernel.py:287: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.
  and should_run_async(code)

[[ldavis_el74471405249460713282762657121]]
----
